local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
	Name = "Rukia Hub",
	LoadingTitle = "Rukia Hub",
	LoadingSubtitle = "by rukia",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "Rukia Hub",
		FileName = "Rukia Hub"
	},
	KeySystem = true, -- Set this to true to use their key system
	KeySettings = {
		Title = "Rukia Hub",
		Subtitle = "Key System",
		Note = "Join the discord (.gg/)",
		SaveKey = true,
		Key = "EXCLUSIVEKEY449", "ex"
	}
})

Rayfield:Notify("Title Example", "Content/Description Example", 4483362458) -- Notfication -- Title, Content, Image

local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image

local Section = Tab:CreateSection("Section Example")

local Button = Tab:CreateButton({
	Name = "NoFall",
	Callback = function(value)
		game.ReplicatedStorage.FallDamage:Destroy(value)
	end,
})

local Button = Tab:CreateButton({
	Name = "Respawn",
	Callback = function(value)
game.Players.LocalPlayer.Character.Humanoid.Health = 0
	end,
})

local Dropdown = Tab:CreateDropdown({
	Name = "Dropdown Example",
	Options = {"Option 1","Option 2"},
	CurrentOption = "Option 1",
	Flag = "Dropdown1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Option)
	  	  -- The function that takes place when the selected option is changed
    	  -- The variable (Option) is a string for the value that the dropdown was changed to
	end,
})

local PlayerTab = Window:CreateTab("Player", 4483362458) -- Title, Image

local walkSpeed = 50
local jumpPower = 50
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local speedToggle = false

local Slider = PlayerTab:CreateSlider({
	Name = "Speed Value",
	Range = {16, 250},
	Increment = 10,
	Suffix = "WalkSpeed",
	CurrentValue = 16,
	Flag = "SpeedValue",
	Callback = function(value)
        walkSpeed = value
	end,
})

local Toggle = PlayerTab:CreateToggle({
	Name = "Speed",
	CurrentValue = false,
	Flag = "Speed", 
	Callback = function(value)
        speedToggle = value
	end,
})

RS.RenderStepped:Connect(function()
    if speedToggle then
        local moveVector = Vector3.new(0, 0, 0)
        local camera = workspace.CurrentCamera
        local forward = camera.CFrame.LookVector
        local right = camera.CFrame.RightVector
        for _, key in ipairs(UIS:GetKeysPressed()) do
            if key.KeyCode == Enum.KeyCode.W then
                moveVector = moveVector + forward
            elseif key.KeyCode == Enum.KeyCode.A then
                moveVector = moveVector - right
            elseif key.KeyCode == Enum.KeyCode.S then
                moveVector = moveVector - forward
            elseif key.KeyCode == Enum.KeyCode.D then
                moveVector = moveVector + right
            end
        end
        local humanoid = game.Players.LocalPlayer.Character.Humanoid
        if moveVector.magnitude > 0 then
            humanoid:Move(moveVector, false)
        end
        humanoid.WalkSpeed = walkSpeed
        humanoid.JumpPower = jumpPower
    end
end)

local isEnabled = false
_G.JP = 50

local Slider = PlayerTab:CreateSlider({
	Name = "JumpPower Value",
	Range = {16, 250},
	Increment = 10,
	Suffix = "JumpPower",
	CurrentValue = 0,
	Flag = "JumpPower",
	Callback = function(value)
	_G.JP = value
	end,
	    AllowDuplicateCalls = true
})

local Toggle = PlayerTab:CreateToggle({
	Name = "JumpPower",
	CurrentValue = false,
	Flag = "JumpPowerToggle", 
	Callback = function(value)
    isEnabled = value
  
        if isEnabled then
            local mt = getrawmetatable(game)
            setreadonly(mt, false)
            local old = mt.__newindex
            
            mt.__newindex = newcclosure(function(o, k, v)
                if isEnabled and tostring(o) == "Humanoid" and tostring(k) == "JumpPower" then
                    return old(o, k, _G.JP)
                end
                
                return old(o, k, v)
            end)
        else
            game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = _G.JP
        end
	end,
})

local Slider = PlayerTab:CreateSlider({
	Name = "Fly Speed",
	Range = {10, 250},
	Increment = 10,
	Suffix = "Flight Speed",
	CurrentValue = 0,
	Flag = "FlightSpeed",
	Callback = function(value)
		flySpeed = value
	end,
})

local Toggle = PlayerTab:CreateToggle({
	Name = "Fly",
	CurrentValue = false,
	Flag = "Fly", 
	Callback = function(value)
		Fly = value
	end,
})

game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid")

end)

game:GetService("RunService").RenderStepped:Connect(function()
    if Fly then
        local char = game:GetService("Players").LocalPlayer.Character
        local lookVector = (game:GetService("Workspace").CurrentCamera.Focus.p - game:GetService("Workspace").CurrentCamera.CFrame.p).Unit
        local velocity = Vector3.new()
        if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.W) then
            velocity = velocity + lookVector * flySpeed
        end
        if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.S) then
            velocity = velocity - lookVector * flySpeed
        end
        if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.A) then
            velocity = velocity - Vector3.new(-lookVector.Z, 0, lookVector.X) * flySpeed
        end
        if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.D) then
            velocity = velocity + Vector3.new(-lookVector.Z, 0, lookVector.X) * flySpeed
        end
        char.HumanoidRootPart.Velocity = velocity
    end
end)

local VisualsTab = Window:CreateTab("Visuals", 4483362458) -- Title, Image

local NPCESPEnabled = false
local TextSize = 12

function createNPCBillboard(npcModel)
    local BillboardGui = Instance.new("BillboardGui", npcModel)
    BillboardGui.Name = "NPCESP"
    BillboardGui.AlwaysOnTop = true
    BillboardGui.LightInfluence = 1
    BillboardGui.Size = UDim2.new(0, 100, 0, 50)
    BillboardGui.StudsOffset = Vector3.new(0, 3, 0)

    local TextLabel = Instance.new("TextLabel", BillboardGui)
    TextLabel.BackgroundTransparency = 1
    TextLabel.BorderSizePixel = 0
    TextLabel.Position = UDim2.new(0, 0, 0, 0)
    TextLabel.Size = UDim2.new(1, 0, 1, 0)
    TextLabel.Font = Enum.Font.SourceSansBold
    TextLabel.Text = npcModel.Name
    TextLabel.TextColor3 = Color3.new(1, 1, 1)
    TextLabel.TextSize = TextSize
    TextLabel.TextStrokeTransparency = 0.5
    TextLabel.TextWrapped = true

    return BillboardGui
end

function createAllNPCBillboards()
    for _, npcModel in ipairs(game.Workspace.NPCs:GetChildren()) do
        createNPCBillboard(npcModel)
    end
end

function toggleNPCESP(enabled)
    for _, npcModel in ipairs(game.Workspace.NPCs:GetChildren()) do
        local billboardGui = npcModel:FindFirstChild("NPCESP")
        if enabled then
            if not billboardGui then
                createNPCBillboard(npcModel)
            else
                billboardGui.Enabled = true
            end
        else
            if billboardGui then
                billboardGui.Enabled = false
            end
        end
    end
end

local Toggle = VisualsTab:CreateToggle({
	Name = "NPC ESP",
	CurrentValue = false,
	Flag = "NPCESP", 
	Callback = function(value)
	 NPCESPEnabled = value
        toggleNPCESP(NPCESPEnabled)
	end,
})

_G.Idol = false
HideCommonToggleKey = Enum.KeyCode.F4
Meshes = {
	--[16657069] = "Money Bag",
	["rbxassetid://10681298319"] = "IDOL",


	
}

-- you can set these off and on
Amulet = true
IDOL = true
Opal = true
PhoenixDown = false
IceEssence = true
PhoenixFeather = true
NightStone = true
PhilosophersStone = true
SpiderCloak = true
LannisAmulet = false
Bloodthorn = false
UnknownArtifact = true
WhiteAmulet = false
ClickArtifact = false


Success = pcall(function()click_detector(Instance.new("ClickDetector"),10)end)
Success2 = pcall(function()fireclickdetector(Instance.new("ClickDetector"))end)
Exploit = Success and 2 or (Success2 and 1 or 0)

local MainParent = game.CoreGui

local TrinketEsp = {Trinket = {}}
TrinketEsp.Visible = true
TrinketEsp.CommonVisible = false

TrinketEsp.Init = function(part,name,rare,rainbow)		
	if not TrinketEsp.Trinket[part] then
		local BillboardUi = Instance.new("BillboardGui")
		BillboardUi.AlwaysOnTop = true
		BillboardUi.Size = UDim2.new(3,60,1,30)
		BillboardUi.ZIndexBehavior = Enum.ZIndexBehavior.Global
		BillboardUi.StudsOffsetWorldSpace = Vector3.new(0,0,0)
		BillboardUi.Adornee = part
			
		local PlayerName = Instance.new("TextLabel",BillboardUi)
		PlayerName.BackgroundTransparency = 1
		PlayerName.TextColor3 = name == "IDOL" and Color3.new(1,1,0) or part.Color
		PlayerName.Size = UDim2.new(1,0,.3,0)
		PlayerName.AnchorPoint = Vector2.new(0,.5)
		PlayerName.Position = UDim2.new(0,0,.2,0)
		PlayerName.ZIndex = 2
		PlayerName.Text = name
		PlayerName.TextScaled = true
		PlayerName.TextStrokeTransparency = .5
		PlayerName.Font = Enum.Font.GothamBold
		PlayerName.TextStrokeColor3 = Color3.fromRGB(33, 33, 33)
		
		local Distance = PlayerName:Clone()
		Distance.Parent = BillboardUi
		Distance.Font = Enum.Font.Gotham
		Distance.TextColor3 = Color3.new(1,1,1)
		Distance.Position = UDim2.new(0,0,.5,0)
		if name == "Phoenix Feather" then
			rainbow = true
			rare = true
		elseif name == "Jewel" then
			rare = true
			elseif name == "IDOL" then
			rare = true
		end
		TrinketEsp.Trinket[part] = {BillboardUi,PlayerName,Distance,rainbow,rare}
	end
end

Grabbed = {}
TrinketEsp.Render = function()
	for i,v in pairs(TrinketEsp.Trinket) do
		pcall(function()
			local Visible = TrinketEsp.Visible and (TrinketEsp.CommonVisible or v[5])
			v[1].Size = UDim2.new(3,60*1.2,1,30*1.2)
			v[1].Parent = Visible and MainParent or nil
			v[1].Adornee = Visible and i or nil
			v[3].Text = math.floor(((game.Workspace.CurrentCamera.CFrame.p) - i.Position).Magnitude+.5)
			v[2].Visible = Visible
			v[3].Visible = Visible
			if v[4] then
				v[2].TextColor3 = Color3.fromHSV((tick()*.5)%1,.8,1)
			end
		end)
		if not i or i.Parent == nil then
			v[1]:Destroy()
			TrinketEsp.Trinket[i] = nil
		elseif not Grabbed[i] or tick() > Grabbed[i] then
			if v[7] and (not v[4] or ClickArtifact) and (Exploit == 1 or Exploit == 2)then
				if ((game.Players.LocalPlayer.Character.PrimaryPart.Position) - i.Position).Magnitude < Click.MaxActivationDistance then
					if Exploit == 2 then
						click_detector(v[5],((game.Players.LocalPlayer.Character.PrimaryPart.Position) - i.Position).Magnitude)
					elseif Exploit == 1 then
						fireclickdetector(v[5],((game.Players.LocalPlayer.Character.PrimaryPart.Position) - i.Position).Magnitude)
					end
					Grabbed[i] = tick() + .1
				end
			end
		end
	end
end


TrinketEsp.GetId = function(rbxasset)
	return tonumber(string.split(rbxasset,"%")[1]:gsub("%D+", "") or 0) or 0
end

TrinketEsp.CompareColors = function(color,color2)
	return math.floor(color.r*255) == math.floor(color2.r*255) and math.floor(color.g*255) == math.floor(color2.g*255) and math.floor(color.b*255) == math.floor(color2.b*255)
end

TrinketEsp.CheckInstance = function(instance)
	if instance:IsA("SpecialMesh") or instance:IsA("MeshPart") then
		local Id = instance.MeshId --TrinketEsp.GetId(instance.MeshId)
		if Meshes[Id] then
			TrinketEsp.Init(instance:IsA("MeshPart") and instance or instance.Parent,Meshes[Id],false)
			if instance:FindFirstChildOfClass("SpecialMesh") then
				TrinketEsp.Init(instance:IsA("SpecialMesh") and instance or instance.Parent,Meshes[Id],false)
			end
		elseif Opal and instance:IsA("SpecialMesh") and instance.MeshType == Enum.MeshType.Sphere and instance.Parent.BrickColor == BrickColor.new("Institutional white") and instance.Parent.Material == Enum.Material.Glass then
			TrinketEsp.Init(instance.Parent,"Opal",false)
		end
	elseif instance:IsA("UnionOperation") then
		if Idol and instance.BrickColor == BrickColor.new("Dark grey") and instance.Material == Enum.Material.Slate and instance.Size.Magnitude<1.3 then
			TrinketEsp.Init(instance,"Idol",false)
		elseif Amulet and instance.BrickColor == BrickColor.new("Fossil") and instance.Material == Enum.Material.SmoothPlastic and instance.Size.Magnitude<2.5 then
			TrinketEsp.Init(instance,"Amulet",false)
		elseif WhiteAmulet and instance.BrickColor == BrickColor.new("Institutional white") and instance.Material == Enum.Material.Neon and instance.Size.Magnitude<2.5 then
			TrinketEsp.Init(instance,"White King's Amulet",true,true)
		elseif IceEssence and instance.Size.Magnitude > .6 and instance.Size.Magnitude < .8 and instance:FindFirstChildOfClass("ParticleEmitter") and TrinketEsp.GetId(instance:FindFirstChildOfClass("ParticleEmitter").Texture) == 20443483 and instance:FindFirstChildOfClass("ParticleEmitter").Size ~= NumberSequence.new(0) and TrinketEsp.CompareColors(instance:FindFirstChildOfClass("ParticleEmitter").Color.Keypoints[1].Value,Color3.fromRGB(27, 152, 152)) and instance.Material == Enum.Material.Neon and instance.Transparency == 1 then
			TrinketEsp.Init(instance,"Ice Essence",true,true)
		elseif SpiderCloak and instance.Size.Magnitude > .6 and instance.Size.Magnitude < .8 and instance:FindFirstChildOfClass("ParticleEmitter") and TrinketEsp.GetId(instance:FindFirstChildOfClass("ParticleEmitter").Texture) == 20443483 and instance:FindFirstChildOfClass("ParticleEmitter").Size ~= NumberSequence.new(0) and instance.Material == Enum.Material.Neon and instance.Transparency == 1 then
			TrinketEsp.Init(instance,"Spider Cloak",true,true)		
		elseif NightStone and instance.BrickColor == BrickColor.new("Black") and instance.Material == Enum.Material.Neon and instance.Size.Magnitude < .9  then
			TrinketEsp.Init(instance,"Night Stone",true,true)	
		elseif PhilosophersStone and instance.BrickColor == BrickColor.new("Persimmon") and instance.Material == Enum.Material.Neon and instance.Size.Magnitude < .9 then
			TrinketEsp.Init(instance,"Philosopher's Stone",true,true)	
		elseif Bloodthorn and instance.BrickColor == BrickColor.new("Royal purple")  then
			TrinketEsp.Init(instance,"Bloodthorn Spawn",true)	
		elseif LannisAmulet  and  instance.Material == Enum.Material.Neon and instance.BrickColor == BrickColor.new("Institutional white")  and instance.Size.Magnitude < 3.1 then
			TrinketEsp.Init(instance,"Lannis Amulet",true, true)	
		elseif UnknownArtifact and instance.Material == Enum.Material.Neon and instance.Size.Magnitude < .9 and not instance.Parent:IsA("Model") then
			TrinketEsp.Init(instance,"Unknown Artifact",true,true)	
		elseif UnknownArtifact and instance.Material == Enum.Material.Neon and instance.BrickColor == BrickColor.new("Hot pink") and instance.Size.Magnitude < 2 then
			TrinketEsp.Init(instance,"Unknown Artifact",true,true)
		end
	elseif instance:IsA("BasePart") then
		if PhoenixDown and instance.Size.Magnitude < 1.4 and instance:FindFirstChildOfClass("Attachment") and instance:FindFirstChildOfClass("Attachment"):FindFirstChildOfClass("ParticleEmitter") and TrinketEsp.GetId(instance:FindFirstChildOfClass("Attachment"):FindFirstChildOfClass("ParticleEmitter").Texture) == 1536547385 and instance.Material == Enum.Material.SmoothPlastic and instance.Transparency == 1 then
			TrinketEsp.Init(instance,"Phoenix Down",true,true)
		end
	end
end

for i,v in pairs(game.Workspace:GetDescendants()) do
	TrinketEsp.CheckInstance(v)
end
game.Workspace.DescendantAdded:Connect(function(v)
	TrinketEsp.CheckInstance(v)
end)

game.Workspace.DescendantRemoving:Connect(function(v)
	if TrinketEsp.Trinket[v] then
		TrinketEsp.Trinket[v][1]:Destroy()
		TrinketEsp.Trinket[v] = nil
	end
end)



game:GetService("RunService").RenderStepped:Connect(function()
	TrinketEsp.Render()
	   if _G.Idol == true then 
        TrinketEsp.Visible = true 
        else
            TrinketEsp.Visible = false
            
    end
end)


local Toggle = VisualsTab:CreateToggle({
	Name = "IDOL ESP",
	CurrentValue = false,
	Flag = "IDOLESP", 
	Callback = function(v)

        if v then
            _G.Idol = true
        else
            _G.Idol = false
        end
	end,
})

_G.Crucifix = false
HideCommonToggleKey = Enum.KeyCode.F4
Meshes = {
	--[16657069] = "Money Bag",
	["rbxassetid://11468548833"] = "CRUCIFIX",


	
}

-- you can set these off and on
Amulet = true
CRUCIFIX = true
Opal = true
PhoenixDown = false
IceEssence = true
PhoenixFeather = true
NightStone = true
PhilosophersStone = true
SpiderCloak = true
LannisAmulet = false
Bloodthorn = false
UnknownArtifact = true
WhiteAmulet = false
ClickArtifact = false


Success = pcall(function()click_detector(Instance.new("ClickDetector"),10)end)
Success2 = pcall(function()fireclickdetector(Instance.new("ClickDetector"))end)
Exploit = Success and 2 or (Success2 and 1 or 0)

local MainParent = game.CoreGui

local TrinketEsp = {Trinket = {}}
TrinketEsp.Visible = true
TrinketEsp.CommonVisible = false

TrinketEsp.Init = function(part,name,rare,rainbow)		
	if not TrinketEsp.Trinket[part] then
		local BillboardUi = Instance.new("BillboardGui")
		BillboardUi.AlwaysOnTop = true
		BillboardUi.Size = UDim2.new(3,60,1,30)
		BillboardUi.ZIndexBehavior = Enum.ZIndexBehavior.Global
		BillboardUi.StudsOffsetWorldSpace = Vector3.new(0,0,0)
		BillboardUi.Adornee = part
			
		local PlayerName = Instance.new("TextLabel",BillboardUi)
		PlayerName.BackgroundTransparency = 1
		PlayerName.TextColor3 = name == "CRUCIFIX" and Color3.new(1,1,0) or part.Color
		PlayerName.Size = UDim2.new(1,0,.3,0)
		PlayerName.AnchorPoint = Vector2.new(0,.5)
		PlayerName.Position = UDim2.new(0,0,.2,0)
		PlayerName.ZIndex = 2
		PlayerName.Text = name
		PlayerName.TextScaled = true
		PlayerName.TextStrokeTransparency = .5
		PlayerName.Font = Enum.Font.GothamBold
		PlayerName.TextStrokeColor3 = Color3.fromRGB(33, 33, 33)
		
		local Distance = PlayerName:Clone()
		Distance.Parent = BillboardUi
		Distance.Font = Enum.Font.Gotham
		Distance.TextColor3 = Color3.new(1,1,1)
		Distance.Position = UDim2.new(0,0,.5,0)
		if name == "Phoenix Feather" then
			rainbow = true
			rare = true
		elseif name == "Jewel" then
			rare = true
			elseif name == "CRUCIFIX" then
			rare = true
		end
		TrinketEsp.Trinket[part] = {BillboardUi,PlayerName,Distance,rainbow,rare}
	end
end

Grabbed = {}
TrinketEsp.Render = function()
	for i,v in pairs(TrinketEsp.Trinket) do
		pcall(function()
			local Visible = TrinketEsp.Visible and (TrinketEsp.CommonVisible or v[5])
			v[1].Size = UDim2.new(3,60*1.2,1,30*1.2)
			v[1].Parent = Visible and MainParent or nil
			v[1].Adornee = Visible and i or nil
			v[3].Text = math.floor(((game.Workspace.CurrentCamera.CFrame.p) - i.Position).Magnitude+.5)
			v[2].Visible = Visible
			v[3].Visible = Visible
			if v[4] then
				v[2].TextColor3 = Color3.fromHSV((tick()*.5)%1,.8,1)
			end
		end)
		if not i or i.Parent == nil then
			v[1]:Destroy()
			TrinketEsp.Trinket[i] = nil
		elseif not Grabbed[i] or tick() > Grabbed[i] then
			if v[7] and (not v[4] or ClickArtifact) and (Exploit == 1 or Exploit == 2)then
				if ((game.Players.LocalPlayer.Character.PrimaryPart.Position) - i.Position).Magnitude < Click.MaxActivationDistance then
					if Exploit == 2 then
						click_detector(v[5],((game.Players.LocalPlayer.Character.PrimaryPart.Position) - i.Position).Magnitude)
					elseif Exploit == 1 then
						fireclickdetector(v[5],((game.Players.LocalPlayer.Character.PrimaryPart.Position) - i.Position).Magnitude)
					end
					Grabbed[i] = tick() + .1
				end
			end
		end
	end
end


TrinketEsp.GetId = function(rbxasset)
	return tonumber(string.split(rbxasset,"%")[1]:gsub("%D+", "") or 0) or 0
end

TrinketEsp.CompareColors = function(color,color2)
	return math.floor(color.r*255) == math.floor(color2.r*255) and math.floor(color.g*255) == math.floor(color2.g*255) and math.floor(color.b*255) == math.floor(color2.b*255)
end

TrinketEsp.CheckInstance = function(instance)
	if instance:IsA("SpecialMesh") or instance:IsA("MeshPart") then
		local Id = instance.MeshId --TrinketEsp.GetId(instance.MeshId)
		if Meshes[Id] then
			TrinketEsp.Init(instance:IsA("MeshPart") and instance or instance.Parent,Meshes[Id],false)
			if instance:FindFirstChildOfClass("SpecialMesh") then
				TrinketEsp.Init(instance:IsA("SpecialMesh") and instance or instance.Parent,Meshes[Id],false)
			end
		elseif Opal and instance:IsA("SpecialMesh") and instance.MeshType == Enum.MeshType.Sphere and instance.Parent.BrickColor == BrickColor.new("Institutional white") and instance.Parent.Material == Enum.Material.Glass then
			TrinketEsp.Init(instance.Parent,"Opal",false)
		end
	elseif instance:IsA("UnionOperation") then
		if Crucifix and instance.BrickColor == BrickColor.new("Dark grey") and instance.Material == Enum.Material.Slate and instance.Size.Magnitude<1.3 then
			TrinketEsp.Init(instance,"Crucifix",false)
		elseif Amulet and instance.BrickColor == BrickColor.new("Fossil") and instance.Material == Enum.Material.SmoothPlastic and instance.Size.Magnitude<2.5 then
			TrinketEsp.Init(instance,"Amulet",false)
		elseif WhiteAmulet and instance.BrickColor == BrickColor.new("Institutional white") and instance.Material == Enum.Material.Neon and instance.Size.Magnitude<2.5 then
			TrinketEsp.Init(instance,"White King's Amulet",true,true)
		elseif IceEssence and instance.Size.Magnitude > .6 and instance.Size.Magnitude < .8 and instance:FindFirstChildOfClass("ParticleEmitter") and TrinketEsp.GetId(instance:FindFirstChildOfClass("ParticleEmitter").Texture) == 20443483 and instance:FindFirstChildOfClass("ParticleEmitter").Size ~= NumberSequence.new(0) and TrinketEsp.CompareColors(instance:FindFirstChildOfClass("ParticleEmitter").Color.Keypoints[1].Value,Color3.fromRGB(27, 152, 152)) and instance.Material == Enum.Material.Neon and instance.Transparency == 1 then
			TrinketEsp.Init(instance,"Ice Essence",true,true)
		elseif SpiderCloak and instance.Size.Magnitude > .6 and instance.Size.Magnitude < .8 and instance:FindFirstChildOfClass("ParticleEmitter") and TrinketEsp.GetId(instance:FindFirstChildOfClass("ParticleEmitter").Texture) == 20443483 and instance:FindFirstChildOfClass("ParticleEmitter").Size ~= NumberSequence.new(0) and instance.Material == Enum.Material.Neon and instance.Transparency == 1 then
			TrinketEsp.Init(instance,"Spider Cloak",true,true)		
		elseif NightStone and instance.BrickColor == BrickColor.new("Black") and instance.Material == Enum.Material.Neon and instance.Size.Magnitude < .9  then
			TrinketEsp.Init(instance,"Night Stone",true,true)	
		elseif PhilosophersStone and instance.BrickColor == BrickColor.new("Persimmon") and instance.Material == Enum.Material.Neon and instance.Size.Magnitude < .9 then
			TrinketEsp.Init(instance,"Philosopher's Stone",true,true)	
		elseif Bloodthorn and instance.BrickColor == BrickColor.new("Royal purple")  then
			TrinketEsp.Init(instance,"Bloodthorn Spawn",true)	
		elseif LannisAmulet  and  instance.Material == Enum.Material.Neon and instance.BrickColor == BrickColor.new("Institutional white")  and instance.Size.Magnitude < 3.1 then
			TrinketEsp.Init(instance,"Lannis Amulet",true, true)	
		elseif UnknownArtifact and instance.Material == Enum.Material.Neon and instance.Size.Magnitude < .9 and not instance.Parent:IsA("Model") then
			TrinketEsp.Init(instance,"Unknown Artifact",true,true)	
		elseif UnknownArtifact and instance.Material == Enum.Material.Neon and instance.BrickColor == BrickColor.new("Hot pink") and instance.Size.Magnitude < 2 then
			TrinketEsp.Init(instance,"Unknown Artifact",true,true)
		end
	elseif instance:IsA("BasePart") then
		if PhoenixDown and instance.Size.Magnitude < 1.4 and instance:FindFirstChildOfClass("Attachment") and instance:FindFirstChildOfClass("Attachment"):FindFirstChildOfClass("ParticleEmitter") and TrinketEsp.GetId(instance:FindFirstChildOfClass("Attachment"):FindFirstChildOfClass("ParticleEmitter").Texture) == 1536547385 and instance.Material == Enum.Material.SmoothPlastic and instance.Transparency == 1 then
			TrinketEsp.Init(instance,"Phoenix Down",true,true)
		end
	end
end

for i,v in pairs(game.Workspace:GetDescendants()) do
	TrinketEsp.CheckInstance(v)
end
game.Workspace.DescendantAdded:Connect(function(v)
	TrinketEsp.CheckInstance(v)
end)

game.Workspace.DescendantRemoving:Connect(function(v)
	if TrinketEsp.Trinket[v] then
		TrinketEsp.Trinket[v][1]:Destroy()
		TrinketEsp.Trinket[v] = nil
	end
end)



game:GetService("RunService").RenderStepped:Connect(function()
	TrinketEsp.Render()
	   if _G.Crucifix == true then 
        TrinketEsp.Visible = true 
        else
            TrinketEsp.Visible = false
            
    end
end)


local Toggle = VisualsTab:CreateToggle({
	Name = "CRUCIFIX ESP",
	CurrentValue = false,
	Flag = "CRUCIFIXESP", 
	Callback = function(v)

        if v then
            _G.Crucifix = true
        else
            _G.Crucifix = false
        end
	end,
})

_G.Aurant = false
HideCommonToggleKey = Enum.KeyCode.F4
Meshes = {
	--[16657069] = "Money Bag",
	["rbxassetid://5603610480"] = "AURANT",


	
}

-- you can set these off and on
Amulet = true
AURANT = true
Opal = true
PhoenixDown = true
IceEssence = true
PhoenixFeather = true
NightStone = true
PhilosophersStone = true
SpiderCloak = true
LannisAmulet = false
Bloodthorn = false
UnknownArtifact = true
WhiteAmulet = false
ClickArtifact = false


Success = pcall(function()click_detector(Instance.new("ClickDetector"),10)end)
Success2 = pcall(function()fireclickdetector(Instance.new("ClickDetector"))end)
Exploit = Success and 2 or (Success2 and 1 or 0)

local MainParent = game.CoreGui

local TrinketEsp = {Trinket = {}}
TrinketEsp.Visible = true
TrinketEsp.CommonVisible = false

TrinketEsp.Init = function(part,name,rare,rainbow)		
	if not TrinketEsp.Trinket[part] then
		local BillboardUi = Instance.new("BillboardGui")
		BillboardUi.AlwaysOnTop = true
		BillboardUi.Size = UDim2.new(3,60,1,30)
		BillboardUi.ZIndexBehavior = Enum.ZIndexBehavior.Global
		BillboardUi.StudsOffsetWorldSpace = Vector3.new(0,0,0)
		BillboardUi.Adornee = part
			
		local PlayerName = Instance.new("TextLabel",BillboardUi)
		PlayerName.BackgroundTransparency = 1
		PlayerName.TextColor3 = name == "AURANT" and Color3.new(1,1,0) or part.Color
		PlayerName.Size = UDim2.new(1,0,.3,0)
		PlayerName.AnchorPoint = Vector2.new(0,.5)
		PlayerName.Position = UDim2.new(0,0,.2,0)
		PlayerName.ZIndex = 2
		PlayerName.Text = name
		PlayerName.TextScaled = true
		PlayerName.TextStrokeTransparency = .5
		PlayerName.Font = Enum.Font.GothamBold
		PlayerName.TextStrokeColor3 = Color3.fromRGB(33, 33, 33)
		
		local Distance = PlayerName:Clone()
		Distance.Parent = BillboardUi
		Distance.Font = Enum.Font.Gotham
		Distance.TextColor3 = Color3.new(1,1,1)
		Distance.Position = UDim2.new(0,0,.5,0)
		if name == "Phoenix Feather" then
			rainbow = true
			rare = true
		elseif name == "Jewel" then
			rare = true
			elseif name == "AURANT" then
			rare = true
		end
		TrinketEsp.Trinket[part] = {BillboardUi,PlayerName,Distance,rainbow,rare}
	end
end

Grabbed = {}
TrinketEsp.Render = function()
	for i,v in pairs(TrinketEsp.Trinket) do
		pcall(function()
			local Visible = TrinketEsp.Visible and (TrinketEsp.CommonVisible or v[5])
			v[1].Size = UDim2.new(3,60*1.2,1,30*1.2)
			v[1].Parent = Visible and MainParent or nil
			v[1].Adornee = Visible and i or nil
			v[3].Text = math.floor(((game.Workspace.CurrentCamera.CFrame.p) - i.Position).Magnitude+.5)
			v[2].Visible = Visible
			v[3].Visible = Visible
			if v[4] then
				v[2].TextColor3 = Color3.fromHSV((tick()*.5)%1,.8,1)
			end
		end)
		if not i or i.Parent == nil then
			v[1]:Destroy()
			TrinketEsp.Trinket[i] = nil
		elseif not Grabbed[i] or tick() > Grabbed[i] then
			if v[7] and (not v[4] or ClickArtifact) and (Exploit == 1 or Exploit == 2)then
				if ((game.Players.LocalPlayer.Character.PrimaryPart.Position) - i.Position).Magnitude < Click.MaxActivationDistance then
					if Exploit == 2 then
						click_detector(v[5],((game.Players.LocalPlayer.Character.PrimaryPart.Position) - i.Position).Magnitude)
					elseif Exploit == 1 then
						fireclickdetector(v[5],((game.Players.LocalPlayer.Character.PrimaryPart.Position) - i.Position).Magnitude)
					end
					Grabbed[i] = tick() + .1
				end
			end
		end
	end
end


TrinketEsp.GetId = function(rbxasset)
	return tonumber(string.split(rbxasset,"%")[1]:gsub("%D+", "") or 0) or 0
end

TrinketEsp.CompareColors = function(color,color2)
	return math.floor(color.r*255) == math.floor(color2.r*255) and math.floor(color.g*255) == math.floor(color2.g*255) and math.floor(color.b*255) == math.floor(color2.b*255)
end

TrinketEsp.CheckInstance = function(instance)
	if instance:IsA("SpecialMesh") or instance:IsA("MeshPart") then
		local Id = instance.MeshId --TrinketEsp.GetId(instance.MeshId)
		if Meshes[Id] then
			TrinketEsp.Init(instance:IsA("MeshPart") and instance or instance.Parent,Meshes[Id],false)
			if instance:FindFirstChildOfClass("SpecialMesh") then
				TrinketEsp.Init(instance:IsA("SpecialMesh") and instance or instance.Parent,Meshes[Id],false)
			end
		elseif Opal and instance:IsA("SpecialMesh") and instance.MeshType == Enum.MeshType.Sphere and instance.Parent.BrickColor == BrickColor.new("Institutional white") and instance.Parent.Material == Enum.Material.Glass then
			TrinketEsp.Init(instance.Parent,"Opal",false)
		end
	elseif instance:IsA("UnionOperation") then
		if AURANT and instance.BrickColor == BrickColor.new("Dark grey") and instance.Material == Enum.Material.Slate and instance.Size.Magnitude<1.3 then
			TrinketEsp.Init(instance,"AURANT",false)
		elseif Amulet and instance.BrickColor == BrickColor.new("Fossil") and instance.Material == Enum.Material.SmoothPlastic and instance.Size.Magnitude<2.5 then
			TrinketEsp.Init(instance,"Amulet",false)
		elseif WhiteAmulet and instance.BrickColor == BrickColor.new("Institutional white") and instance.Material == Enum.Material.Neon and instance.Size.Magnitude<2.5 then
			TrinketEsp.Init(instance,"White King's Amulet",true,true)
		elseif IceEssence and instance.Size.Magnitude > .6 and instance.Size.Magnitude < .8 and instance:FindFirstChildOfClass("ParticleEmitter") and TrinketEsp.GetId(instance:FindFirstChildOfClass("ParticleEmitter").Texture) == 20443483 and instance:FindFirstChildOfClass("ParticleEmitter").Size ~= NumberSequence.new(0) and TrinketEsp.CompareColors(instance:FindFirstChildOfClass("ParticleEmitter").Color.Keypoints[1].Value,Color3.fromRGB(27, 152, 152)) and instance.Material == Enum.Material.Neon and instance.Transparency == 1 then
			TrinketEsp.Init(instance,"Ice Essence",true,true)
		elseif SpiderCloak and instance.Size.Magnitude > .6 and instance.Size.Magnitude < .8 and instance:FindFirstChildOfClass("ParticleEmitter") and TrinketEsp.GetId(instance:FindFirstChildOfClass("ParticleEmitter").Texture) == 20443483 and instance:FindFirstChildOfClass("ParticleEmitter").Size ~= NumberSequence.new(0) and instance.Material == Enum.Material.Neon and instance.Transparency == 1 then
			TrinketEsp.Init(instance,"Spider Cloak",true,true)		
		elseif NightStone and instance.BrickColor == BrickColor.new("Black") and instance.Material == Enum.Material.Neon and instance.Size.Magnitude < .9  then
			TrinketEsp.Init(instance,"Night Stone",true,true)	
		elseif PhilosophersStone and instance.BrickColor == BrickColor.new("Persimmon") and instance.Material == Enum.Material.Neon and instance.Size.Magnitude < .9 then
			TrinketEsp.Init(instance,"Philosopher's Stone",true,true)	
		elseif Bloodthorn and instance.BrickColor == BrickColor.new("Royal purple")  then
			TrinketEsp.Init(instance,"Bloodthorn Spawn",true)	
		elseif LannisAmulet  and  instance.Material == Enum.Material.Neon and instance.BrickColor == BrickColor.new("Institutional white")  and instance.Size.Magnitude < 3.1 then
			TrinketEsp.Init(instance,"Lannis Amulet",true, true)	
		elseif UnknownArtifact and instance.Material == Enum.Material.Neon and instance.Size.Magnitude < .9 and not instance.Parent:IsA("Model") then
			TrinketEsp.Init(instance,"Unknown Artifact",true,true)	
		elseif UnknownArtifact and instance.Material == Enum.Material.Neon and instance.BrickColor == BrickColor.new("Hot pink") and instance.Size.Magnitude < 2 then
			TrinketEsp.Init(instance,"Unknown Artifact",true,true)
		end
	elseif instance:IsA("BasePart") then
		if PhoenixDown and instance.Size.Magnitude < 1.4 and instance:FindFirstChildOfClass("Attachment") and instance:FindFirstChildOfClass("Attachment"):FindFirstChildOfClass("ParticleEmitter") and TrinketEsp.GetId(instance:FindFirstChildOfClass("Attachment"):FindFirstChildOfClass("ParticleEmitter").Texture) == 1536547385 and instance.Material == Enum.Material.SmoothPlastic and instance.Transparency == 1 then
			TrinketEsp.Init(instance,"Phoenix Down",true,true)
		end
	end
end

for i,v in pairs(game.Workspace:GetDescendants()) do
	TrinketEsp.CheckInstance(v)
end
game.Workspace.DescendantAdded:Connect(function(v)
	TrinketEsp.CheckInstance(v)
end)

game.Workspace.DescendantRemoving:Connect(function(v)
	if TrinketEsp.Trinket[v] then
		TrinketEsp.Trinket[v][1]:Destroy()
		TrinketEsp.Trinket[v] = nil
	end
end)


game:GetService("RunService").RenderStepped:Connect(function()
	TrinketEsp.Render()
	   if _G.Aurant == true then 
        TrinketEsp.Visible = true 
        else
            TrinketEsp.Visible = false
            
    end
end)

local Toggle = VisualsTab:CreateToggle({
	Name = "AURANT ESP",
	CurrentValue = false,
	Flag = "AURANTESP", 
	Callback = function(v)

        if v then
            _G.Aurant = true
        else
            _G.Aurant = false
        end
	end,
})


local FunTab = Window:CreateTab("Fun", 4483362458) -- Title, Image

local targetn = ""
local Input = FunTab:CreateInput({
    Name = "Molten Thingy Mingy",
    PlaceholderText = "PlayerUsername",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
    
targetn = Text
    end,
})
local gauntlet = game.Players.LocalPlayer.Character.Torso.LavaGauntlet11
local waitrq = false
local enable = false
local Uis = game:GetService("UserInputService")
local used = false
local connection2

connection2 = Uis.InputBegan:Connect(function(Input,IsTyping)
    if used == true then
        connection2:Disconnect()
    end
    if IsTyping then return end
    if Input.KeyCode == Enum.KeyCode.F5 then
        if enable == false then
            enable = true
        else
            used = true
            enable = false
        end
    end
end)

local connection

connection = game:GetService("RunService").RenderStepped:Connect(function()
    if enable == false then return end
    if targetn == "" or targetn == nil then return end
    local target = workspace.Live:FindFirstChild(targetn) -- target username
    if target then
        if waitrq == true then return end
        waitrq = true
        gauntlet:SetPrimaryPartCFrame(target.Torso.CFrame)
        task.wait(0.05)
        waitrq = false
    end
end)

local Button = FunTab:CreateButton({
	Name = "Lag Script",
	Callback = function(value)
end,
})

local OtherTab = Window:CreateTab("Other", 4483362458) -- Title, Image

local Button = OtherTab:CreateButton({
	Name = "Infinite Yield FE",
	Callback = function(value)
loadstring(game:HttpGet("https://raw.githubusercontent.com/flowersblade/tokyo/main/infinite%20yield%20fe"))()
	end,
})


-- Extras

-- getgenv().SecureMode = true -- Only Set To True If Games Are Detecting/Crashing The UI

-- Rayfield:Destroy() -- Destroys UI

-- Rayfield:LoadConfiguration() -- Enables Configuration Saving

-- Section:Set("Section Example") -- Use To Update Section Text

-- Button:Set("Button Example") -- Use To Update Button Text

-- Toggle:Set(false) -- Use To Update Toggle

-- Slider:Set(10) -- Use To Update Slider Value

-- Label:Set("Label Example") -- Use To Update Label Text

-- Paragraph:Set({Title = "Paragraph Example", Content = "Paragraph Example"}) -- Use To Update Paragraph Text

-- Keybind:Set("RightCtrl") -- Keybind (string) -- Use To Update Keybind

-- Dropdown:Set("Option 2") -- The new option value -- Use To Update/Set New Dropdowns
